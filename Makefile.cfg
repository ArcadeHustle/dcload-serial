# dcload-serial Makefile Configuration

# Detect the host
ROOTDIR := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))
include $(ROOTDIR)/Makefile.hostdetect

# Host compiler and flags
HOSTCC			= gcc
HOSTCFLAGS		= -O2 -I/usr/local/include
HOSTLDFLAGS		= -L/usr/local/lib

# For MinGW/MSYS and Cygwin
ifneq ($(call ifdef_any_of,MINGW32 CYGWIN),)
  HOSTCFLAGS += -D_WIN32
  EXECUTABLEEXTENSION = .exe
endif

# dc compiler prefix -- this is usually what you used for --prefix when
# building your compiler.
TARGETPREFIX	= /opt/toolchains/dc/sh-elf

# To build dc-tool, we need to use libelf or libfd
# Define this if you want to use libbfd instead of libelf (which is default)
WITH_BFD = 0

# For MinGW/MSYS, we need to use libbfd instead of libelf
ifdef MINGW32
  WITH_BFD = 1
endif  

# You may have to change the paths for BFDLIB and BFDINCLUDE to the correct 
# ones for your system. These must point to your sh-elf bfd, not the system one!
# If you built the dc-chain with the v0.4, you'll have it installed.
BFDLIB			= $(TARGETPREFIX)/lib -lbfd -liberty -lintl -lz
BFDINCLUDE		= $(TARGETPREFIX)/include

# Additional libraries for MinGW/MSYS
ifdef MINGW32
  BFDLIB		+= -lwsock32 -liconv
endif

# Replace this with 3 if you're using an old 3.x GCC compiler
TARGETCCVER		= 4

# You don't need to change these
TARGETCC		= $(TARGETPREFIX)/bin/sh-elf-gcc
TARGETCFLAGS	= -O2 -ml -m4-single-only
TARGETOBJCOPY	= $(TARGETPREFIX)/bin/sh-elf-objcopy -R .stack
TARGETLD		= $(TARGETPREFIX)/bin/sh-elf-ld

# this is the default port for dc-tool, it can be changed on the commandline
SERIALDEVICE	= /dev/ttyS0

# macOS -- you'll need to go look in /dev to see what the actual device
# name is, and depending on the device, it must be plugged into the same
# port each time.
#SERIALDEVICE	= /dev/cu.usbserial-5B24

ifneq ($(call ifdef_any_of,MINGW32 CYGWIN),)
  SERIALDEVICE = COM1
endif

# dir to install dc-tool in
TOOLINSTALLDIR	= /opt/toolchains/dc/bin

# default serial speed - YOU DO NOT NEED TO CHANGE THIS
SERIALSPEED	= 57600

# MinGW/MSYS
# Define this if you want a standalone, no dependency binary
# When the binary is standalone, it can be run outside MSYS environment
#STANDALONE_BINARY = 1
